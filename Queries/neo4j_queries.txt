QUERY 1 -- Lista por ordem descrescente os medicamentos mais caros

MATCH (m:Medicine)
RETURN m.id_medicine AS id, m.m_name AS name, m.m_cost AS cost
ORDER BY m.m_cost DESC

QUERY 2 -- Listar pacientes que têm mais de 3 episodes por ordem descrescente

MATCH (p:Patient)-[:HAS_EPISODE]->(e:Episode)
WITH p, COUNT(e) AS episode_count
WHERE episode_count > 3
RETURN p.id_patient AS id_patient, p.patient_fname AS patient_fname, p.patient_lname AS patient_lname, episode_count
ORDER BY episode_count DESC, id_patient ASC

QUERY 3 -- Listar pacientes e as seus contactos de emergência

MATCH (p:Patient)-[:HAS_EMERGENCY_CONTACT]->(ec:Emergency_Contact)
RETURN p.id_patient AS id_patient, p.patient_fname AS patient_fname, p.patient_lname AS patient_lname, ec.contact_name AS contact_name, ec.phone AS phone
ORDER BY p.id_patient ASC

QUERY 4 -- Listar as salas com o maior custo de hospitalização total

MATCH (r:Room)<-[:HAS_ROOM]-(h:Hospitalization)<-[:HAS_HOSPITALIZATION]-(e:Episode)-[:HAS_BILL]->(b:Bill)
RETURN r.id_room AS room_id, r.room_type AS room_type, SUM(b.total) AS total_cost
ORDER BY total_cost DESC

QUERY 5 -- Contar o número de pacientes únicos por tipo de sala

MATCH (r:Room)<-[:HAS_ROOM]-(h:Hospitalization)<-[:HAS_HOSPITALIZATION]-(e:Episode)<-[:HAS_EPISODE]-(p:Patient)
RETURN r.room_type AS room_type, COUNT(DISTINCT p.id_patient) AS unique_patient_count
ORDER BY unique_patient_count DESC

QUERY 6 -- Listar os tipos de sala e o custo médio por tipo

MATCH (r:Room)
RETURN r.room_type AS room_type, AVG(r.room_cost) AS average_cost
ORDER BY average_cost DESC

QUERY 7 -- Contar o número de funcionários por departamento, ordenado pelo número de funcionários

MATCH (s:Staff)-[:WORKS_IN_DEPARTMENT]->(d:Department)
RETURN d.dept_name AS department_name, COUNT(s) AS staff_count
ORDER BY staff_count DESC

QUERY 8 -- O funcionário com mais tempo de serviço ativo

MATCH (s:Staff)
WHERE s.is_active_status = 'Y'
WITH s, duration.inDays(date(s.date_joining), date()).days AS days_at_hospital
RETURN s.emp_id AS emp_id, s.emp_fname AS first_name, s.emp_lname AS last_name, 
       ROUND(days_at_hospital / 365.25, 2) AS years_at_hospital
ORDER BY days_at_hospital DESC
LIMIT 1

QUERY 9 -- O paciente com mais condições médicas e suas condições

MATCH (p:Patient)-[:HAS_MEDICAL_HISTORY]->(mh:Medical_History)
WITH p, COUNT(mh) AS condition_count, COLLECT(mh.condition) AS conditions
RETURN p.id_patient AS id_patient, p.patient_fname AS first_name, p.patient_lname AS last_name,
       condition_count, REDUCE(s = '', condition IN conditions | s + CASE WHEN s = '' THEN '' ELSE ', ' END + condition) AS conditions
ORDER BY condition_count DESC
LIMIT 1

QUERY 10 -- Listar todas as hospitalizações em uma sala específica

MATCH (r:Room)
OPTIONAL MATCH (r)<-[:HAS_ROOM]-(h:Hospitalization)
RETURN r.id_room AS room_id, r.room_type AS room_type, COUNT(h) AS hospitalization_count
ORDER BY hospitalization_count DESC, room_id ASC

QUERY 11 -- Get Patients with the Most Appointments

MATCH (p:Patient)-[:HAS_EPISODE]->(e:Episode)-[:HAS_APPOINTMENT]->(a:Appointment)
RETURN p.id_patient AS idpatient, p.patient_fname AS patient_fname, p.patient_lname AS patient_lname, COUNT(a) AS appointment_count
ORDER BY appointment_count DESC


QUERY 12 -- Get Total Bill Cost per Patient, ordered

MATCH (p:Patient)-[:HAS_EPISODE]->(e:Episode)-[:HAS_BILL]->(b:Bill)
RETURN p.id_patient AS idpatient, p.patient_fname AS patient_fname, p.patient_lname AS patient_lname, SUM(b.total) AS sum_total_bill
ORDER BY sum_total_bill DESC  


QUERY 13 -- Get average hospitalization stay

MATCH (h:Hospitalization)
RETURN ROUND(AVG(TOFLOAT(duration.inDays(h.admission_date, h.discharge_date).days)), 2) as avg_hospitalization_stay
